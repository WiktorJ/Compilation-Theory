
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '3DA9DB152A19B6954D6B3DB28F95B711'
    
_lr_action_items = {'%':([3,5,17,27,29,32,56,59,67,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,106,109,110,118,119,121,126,],[39,-49,-47,-48,-46,-45,39,-49,39,39,39,-53,39,39,39,-54,39,39,39,-52,39,39,39,39,39,39,39,39,39,39,-68,-69,-71,-70,39,39,]),'error':([0,2,4,6,8,9,10,11,14,16,19,20,21,22,24,28,30,31,33,51,54,60,66,69,71,72,73,92,97,99,103,111,117,120,134,138,139,140,141,142,143,147,148,],[-3,18,-20,57,-18,-22,-25,-19,-2,68,-26,-27,-4,-6,-5,-21,-24,-23,-8,-28,93,-42,107,-10,-41,112,18,-31,-30,-29,-9,-40,-7,-32,-43,-39,-38,-37,-35,-33,-76,-36,-34,]),'ID':([0,2,4,6,8,9,10,11,12,13,14,16,19,20,21,22,23,24,28,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,64,65,66,69,71,72,73,92,97,98,99,101,102,103,104,105,111,114,115,117,120,122,130,131,132,133,134,138,139,140,141,142,143,145,146,147,148,],[-3,5,-20,59,-18,-22,-25,-19,61,5,-2,59,-26,-27,-4,-6,59,-5,-21,-24,-23,-8,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-28,59,5,59,59,-42,5,-17,59,-10,-41,59,5,-31,-30,59,-29,59,128,-9,59,-16,-40,5,128,-7,-32,135,5,5,5,5,-43,-39,-38,-37,-35,-33,-76,5,5,-36,-34,]),':':([5,],[53,]),'OR':([3,5,17,27,29,32,56,59,67,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,106,109,110,118,119,121,126,],[36,-49,-47,-48,-46,-45,36,-49,36,36,-50,-53,-59,-51,-57,-54,-56,-61,-65,-52,-62,-66,-67,-60,-58,-55,-64,-63,36,36,-68,-69,-71,-70,36,36,]),'REPEAT':([0,2,4,8,9,10,11,13,14,19,20,21,22,24,28,30,31,33,51,53,60,64,65,69,71,73,92,97,99,103,105,111,114,117,120,130,131,132,133,134,138,139,140,141,142,143,145,146,147,148,],[-3,13,-20,-18,-22,-25,-19,13,-2,-26,-27,-4,-6,-5,-21,-24,-23,-8,-28,13,-42,13,-17,-10,-41,13,-31,-30,-29,-9,-16,-40,13,-7,-32,13,13,13,13,-43,-39,-38,-37,-35,-33,-76,13,13,-36,-34,]),'GE':([3,5,17,27,29,32,56,59,67,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,106,109,110,118,119,121,126,],[46,-49,-47,-48,-46,-45,46,-49,46,46,-50,-53,46,-51,46,-54,46,-61,None,-52,None,None,None,-60,46,46,None,None,46,46,-68,-69,-71,-70,46,46,]),'STRING':([0,2,4,6,8,9,10,11,13,14,16,19,20,21,22,23,24,28,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,64,65,66,69,71,72,73,92,97,98,99,101,103,104,105,111,114,117,120,130,131,132,133,134,138,139,140,141,142,143,145,146,147,148,],[-3,17,-20,17,-18,-22,-25,-19,17,-2,17,-26,-27,-4,-6,17,-5,-21,-24,-23,-8,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-28,17,17,17,17,-42,17,-17,17,-10,-41,17,17,-31,-30,17,-29,17,-9,17,-16,-40,17,-7,-32,17,17,17,17,-43,-39,-38,-37,-35,-33,-76,17,17,-36,-34,]),'&':([3,5,17,27,29,32,56,59,67,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,106,109,110,118,119,121,126,],[40,-49,-47,-48,-46,-45,40,-49,40,40,-50,-53,40,-51,40,-54,-56,-61,-65,-52,-62,-66,-67,-60,40,40,-64,-63,40,40,-68,-69,-71,-70,40,40,]),'$end':([0,1,2,4,8,9,10,11,14,19,20,21,22,24,28,30,31,51,60,69,71,92,97,99,103,111,120,134,138,139,140,141,142,143,147,148,],[-3,0,-1,-20,-18,-22,-25,-19,-2,-26,-27,-4,-6,-5,-21,-24,-23,-28,-42,-10,-41,-31,-30,-29,-9,-40,-32,-43,-39,-38,-37,-35,-33,-76,-36,-34,]),'<':([3,5,17,27,29,32,56,59,67,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,106,109,110,118,119,121,126,],[42,-49,-47,-48,-46,-45,42,-49,42,42,-50,-53,42,-51,42,-54,42,-61,None,-52,None,None,None,-60,42,42,None,None,42,42,-68,-69,-71,-70,42,42,]),'AND':([3,5,17,27,29,32,56,59,67,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,106,109,110,118,119,121,126,],[48,-49,-47,-48,-46,-45,48,-49,48,48,-50,-53,48,-51,-57,-54,-56,-61,-65,-52,-62,-66,-67,-60,-58,-55,-64,-63,48,48,-68,-69,-71,-70,48,48,]),'}':([4,8,9,10,11,19,20,28,30,31,33,51,60,65,69,71,73,92,97,99,103,105,111,114,116,117,120,134,138,139,140,141,142,147,148,],[-20,-18,-22,-25,-19,-26,-27,-21,-24,-23,-8,-28,-42,-17,-10,-41,-15,-31,-30,-29,-9,-16,-40,-14,134,-7,-32,-43,-39,-38,-37,-35,-33,-36,-34,]),'EQ':([3,5,17,27,29,32,56,59,67,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,106,109,110,118,119,121,126,],[44,-49,-47,-48,-46,-45,44,-49,44,44,-50,-53,44,-51,44,-54,44,-61,None,-52,None,None,None,-60,44,44,None,None,44,44,-68,-69,-71,-70,44,44,]),'ELSE':([4,8,9,10,11,19,20,28,30,31,51,60,71,92,97,99,111,120,134,138,139,140,141,142,147,148,],[-20,-18,-22,-25,-19,-26,-27,-21,-24,-23,-28,-42,-41,-31,-30,-29,-40,-32,-43,-39,-38,-37,145,146,-36,-34,]),'(':([0,2,4,5,6,8,9,10,11,13,14,15,16,19,20,21,22,23,24,26,28,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,59,60,61,64,65,66,69,71,72,73,92,97,98,99,101,103,104,105,111,114,117,120,130,131,132,133,134,138,139,140,141,142,143,145,146,147,148,],[-3,16,-20,54,16,-18,-22,-25,-19,16,-2,66,16,-26,-27,-4,-6,16,-5,72,-21,-24,-23,-8,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-28,16,16,16,16,54,-42,100,16,-17,16,-10,-41,16,16,-31,-30,16,-29,16,-9,16,-16,-40,16,-7,-32,16,16,16,16,-43,-39,-38,-37,-35,-33,-76,16,16,-36,-34,]),'SHL':([3,5,17,27,29,32,56,59,67,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,106,109,110,118,119,121,126,],[47,-49,-47,-48,-46,-45,47,-49,47,47,-50,-53,47,-51,47,-54,47,-61,47,-52,47,47,47,-60,47,47,47,47,47,47,-68,-69,-71,-70,47,47,]),'*':([3,5,17,27,29,32,56,59,67,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,106,109,110,118,119,121,126,],[43,-49,-47,-48,-46,-45,43,-49,43,43,43,-53,43,43,43,-54,43,43,43,-52,43,43,43,43,43,43,43,43,43,43,-68,-69,-71,-70,43,43,]),'PRINT':([0,2,4,8,9,10,11,13,14,19,20,21,22,24,28,30,31,33,51,53,60,64,65,69,71,73,92,97,99,103,105,111,114,117,120,130,131,132,133,134,138,139,140,141,142,143,145,146,147,148,],[-3,6,-20,-18,-22,-25,-19,6,-2,-26,-27,-4,-6,-5,-21,-24,-23,-8,-28,6,-42,6,-17,-10,-41,6,-31,-30,-29,-9,-16,-40,6,-7,-32,6,6,6,6,-43,-39,-38,-37,-35,-33,-76,6,6,-36,-34,]),'>':([3,5,17,27,29,32,56,59,67,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,106,109,110,118,119,121,126,],[50,-49,-47,-48,-46,-45,50,-49,50,50,-50,-53,50,-51,50,-54,50,-61,None,-52,None,None,None,-60,50,50,None,None,50,50,-68,-69,-71,-70,50,50,]),'BREAK':([0,2,4,8,9,10,11,13,14,19,20,21,22,24,28,30,31,33,51,53,60,64,65,69,71,73,92,97,99,103,105,111,114,117,120,130,131,132,133,134,138,139,140,141,142,143,145,146,147,148,],[-3,7,-20,-18,-22,-25,-19,7,-2,-26,-27,-4,-6,-5,-21,-24,-23,-8,-28,7,-42,7,-17,-10,-41,7,-31,-30,-29,-9,-16,-40,7,-7,-32,7,7,7,7,-43,-39,-38,-37,-35,-33,-76,7,7,-36,-34,]),'NEQ':([3,5,17,27,29,32,56,59,67,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,106,109,110,118,119,121,126,],[52,-49,-47,-48,-46,-45,52,-49,52,52,-50,-53,52,-51,52,-54,52,-61,None,-52,None,None,None,-60,52,52,None,None,52,52,-68,-69,-71,-70,52,52,]),'RETURN':([0,2,4,8,9,10,11,13,14,19,20,21,22,24,28,30,31,33,51,53,60,64,65,69,71,73,92,97,99,103,105,111,114,117,120,130,131,132,133,134,138,139,140,141,142,143,145,146,147,148,],[-3,23,-20,-18,-22,-25,-19,23,-2,-26,-27,-4,-6,-5,-21,-24,-23,-8,-28,23,-42,23,-17,-10,-41,23,-31,-30,-29,-9,-16,-40,23,-7,-32,23,23,23,23,-43,-39,-38,-37,-35,-33,-76,23,23,-36,-34,]),'/':([3,5,17,27,29,32,56,59,67,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,106,109,110,118,119,121,126,],[35,-49,-47,-48,-46,-45,35,-49,35,35,35,-53,35,35,35,-54,35,35,35,-52,35,35,35,35,35,35,35,35,35,35,-68,-69,-71,-70,35,35,]),'CONTINUE':([0,2,4,8,9,10,11,13,14,19,20,21,22,24,28,30,31,33,51,53,60,64,65,69,71,73,92,97,99,103,105,111,114,117,120,130,131,132,133,134,138,139,140,141,142,143,145,146,147,148,],[-3,25,-20,-18,-22,-25,-19,25,-2,-26,-27,-4,-6,-5,-21,-24,-23,-8,-28,25,-42,25,-17,-10,-41,25,-31,-30,-29,-9,-16,-40,25,-7,-32,25,25,25,25,-43,-39,-38,-37,-35,-33,-76,25,25,-36,-34,]),')':([17,27,29,32,54,56,59,67,68,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,100,106,107,108,109,110,112,113,118,119,121,123,124,125,135,144,],[-47,-48,-46,-45,-73,-75,-49,109,110,-50,-53,-59,-51,-57,-54,-56,-61,-65,-52,-62,-66,-67,-60,-58,-55,-64,-63,118,-72,119,-78,-44,130,131,-68,-69,132,133,-71,-70,-74,136,-77,-80,-81,-79,]),'IF':([0,2,4,8,9,10,11,13,14,19,20,21,22,24,28,30,31,33,51,53,60,64,65,69,71,73,92,97,99,103,105,111,114,117,120,130,131,132,133,134,138,139,140,141,142,143,145,146,147,148,],[-3,26,-20,-18,-22,-25,-19,26,-2,-26,-27,-4,-6,-5,-21,-24,-23,-8,-28,26,-42,26,-17,-10,-41,26,-31,-30,-29,-9,-16,-40,26,-7,-32,26,26,26,26,-43,-39,-38,-37,-35,-33,-76,26,26,-36,-34,]),'^':([3,5,17,27,29,32,56,59,67,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,106,109,110,118,119,121,126,],[38,-49,-47,-48,-46,-45,38,-49,38,38,-50,-53,38,-51,-57,-54,-56,-61,-65,-52,-62,-66,-67,-60,38,38,-64,-63,38,38,-68,-69,-71,-70,38,38,]),'+':([3,5,17,27,29,32,56,59,67,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,106,109,110,118,119,121,126,],[34,-49,-47,-48,-46,-45,34,-49,34,34,-50,-53,34,-51,34,-54,34,34,34,-52,34,34,34,34,34,34,34,34,34,34,-68,-69,-71,-70,34,34,]),'FLOAT':([0,2,4,6,8,9,10,11,13,14,16,19,20,21,22,23,24,28,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,64,65,66,69,71,72,73,92,97,98,99,101,103,104,105,111,114,117,120,130,131,132,133,134,138,139,140,141,142,143,145,146,147,148,],[-3,29,-20,29,-18,-22,-25,-19,29,-2,29,-26,-27,-4,-6,29,-5,-21,-24,-23,-8,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-28,29,29,29,29,-42,29,-17,29,-10,-41,29,29,-31,-30,29,-29,29,-9,29,-16,-40,29,-7,-32,29,29,29,29,-43,-39,-38,-37,-35,-33,-76,29,29,-36,-34,]),'SHR':([3,5,17,27,29,32,56,59,67,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,106,109,110,118,119,121,126,],[41,-49,-47,-48,-46,-45,41,-49,41,41,-50,-53,41,-51,41,-54,41,-61,41,-52,41,41,41,-60,41,41,41,41,41,41,-68,-69,-71,-70,41,41,]),'=':([5,61,128,],[55,101,101,]),'UNTIL':([4,8,9,10,11,19,20,28,30,31,51,60,64,65,71,92,97,99,105,111,120,134,138,139,140,141,142,147,148,],[-20,-18,-22,-25,-19,-26,-27,-21,-24,-23,-28,-42,104,-17,-41,-31,-30,-29,-16,-40,-32,-43,-39,-38,-37,-35,-33,-36,-34,]),'TYPE':([0,2,4,8,9,10,11,14,19,20,21,22,24,28,30,31,33,51,60,69,71,73,92,97,99,100,103,111,117,120,134,137,138,139,140,141,142,143,147,148,],[-3,12,-20,-18,-22,-25,-19,-2,-26,-27,-4,-6,-5,-21,-24,-23,-8,-28,-42,-10,-41,115,-31,-30,-29,122,-9,-40,-7,-32,-43,122,-39,-38,-37,-35,-33,-76,-36,-34,]),'|':([3,5,17,27,29,32,56,59,67,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,106,109,110,118,119,121,126,],[49,-49,-47,-48,-46,-45,49,-49,49,49,-50,-53,49,-51,-57,-54,-56,-61,-65,-52,-62,-66,-67,-60,49,-55,-64,-63,49,49,-68,-69,-71,-70,49,49,]),'LE':([3,5,17,27,29,32,56,59,67,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,106,109,110,118,119,121,126,],[45,-49,-47,-48,-46,-45,45,-49,45,45,-50,-53,45,-51,45,-54,45,-61,None,-52,None,None,None,-60,45,45,None,None,45,45,-68,-69,-71,-70,45,45,]),'-':([3,5,17,27,29,32,56,59,67,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,106,109,110,118,119,121,126,],[37,-49,-47,-48,-46,-45,37,-49,37,37,-50,-53,37,-51,37,-54,37,37,37,-52,37,37,37,37,37,37,37,37,37,37,-68,-69,-71,-70,37,37,]),'INTEGER':([0,2,4,6,8,9,10,11,13,14,16,19,20,21,22,23,24,28,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,64,65,66,69,71,72,73,92,97,98,99,101,103,104,105,111,114,117,120,130,131,132,133,134,138,139,140,141,142,143,145,146,147,148,],[-3,32,-20,32,-18,-22,-25,-19,32,-2,32,-26,-27,-4,-6,32,-5,-21,-24,-23,-8,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-28,32,32,32,32,-42,32,-17,32,-10,-41,32,32,-31,-30,32,-29,32,-9,32,-16,-40,32,-7,-32,32,32,32,32,-43,-39,-38,-37,-35,-33,-76,32,32,-36,-34,]),',':([17,27,29,32,56,58,59,62,63,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,109,110,118,119,121,124,125,126,127,135,144,],[-47,-48,-46,-45,-75,98,-49,102,-12,-50,-53,-59,-51,-57,-54,-56,-61,-65,-52,-62,-66,-67,-60,-58,-55,-64,-63,98,-68,-69,-71,-70,-74,137,-80,-13,-11,-81,-79,]),';':([3,5,7,17,18,25,27,29,32,56,57,58,59,62,63,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,106,109,110,118,119,121,126,127,129,],[51,-49,60,-47,69,71,-48,-46,-45,-75,97,99,-49,103,-12,111,-50,-53,-59,-51,-57,-54,-56,-61,-65,-52,-62,-66,-67,-60,-58,-55,-64,-63,120,-44,-68,-69,-71,-70,-74,-13,-11,138,]),'WHILE':([0,2,4,8,9,10,11,13,14,19,20,21,22,24,28,30,31,33,51,53,60,64,65,69,71,73,92,97,99,103,105,111,114,117,120,130,131,132,133,134,138,139,140,141,142,143,145,146,147,148,],[-3,15,-20,-18,-22,-25,-19,15,-2,-26,-27,-4,-6,-5,-21,-24,-23,-8,-28,15,-42,15,-17,-10,-41,15,-31,-30,-29,-9,-16,-40,15,-7,-32,15,15,15,15,-43,-39,-38,-37,-35,-33,-76,15,15,-36,-34,]),'{':([0,2,4,8,9,10,11,13,14,19,20,21,22,24,28,30,31,33,51,53,60,64,65,69,71,73,92,97,99,103,105,111,114,117,120,130,131,132,133,134,136,138,139,140,141,142,143,145,146,147,148,],[-3,33,-20,-18,-22,-25,-19,33,-2,-26,-27,-4,-6,-5,-21,-24,-23,-8,-28,33,-42,33,-17,-10,-41,33,-31,-30,-29,-9,-16,-40,33,-7,-32,33,33,33,33,-43,33,-39,-38,-37,-35,-33,-76,33,33,-36,-34,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([2,6,13,16,23,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,64,66,72,73,98,101,104,114,130,131,132,133,145,146,],[3,56,3,67,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,3,56,96,3,106,106,3,121,126,106,3,3,3,3,3,3,3,]),'return_instr':([2,13,53,64,73,114,130,131,132,133,145,146,],[30,30,30,30,30,30,30,30,30,30,30,30,]),'inits':([12,115,],[62,62,]),'program':([0,],[1,]),'assignment':([2,13,53,64,73,114,130,131,132,133,145,146,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'arg':([100,137,],[125,144,]),'declarations':([33,],[73,]),'expr_list':([6,54,],[58,94,]),'continue_instr':([2,13,53,64,73,114,130,131,132,133,145,146,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'break_instr':([2,13,53,64,73,114,130,131,132,133,145,146,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'compound_instr':([2,13,53,64,73,114,130,131,132,133,136,145,146,],[20,20,20,20,20,20,20,20,20,20,143,20,20,]),'instructions':([13,73,],[64,114,]),'fundef':([2,],[24,]),'declaration':([2,73,],[21,117,]),'instruction':([2,13,53,64,73,114,130,131,132,133,145,146,],[22,65,92,105,65,105,139,140,141,142,147,148,]),'instructions_opt':([73,],[116,]),'print_instr':([2,13,53,64,73,114,130,131,132,133,145,146,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'while_instr':([2,13,53,64,73,114,130,131,132,133,145,146,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'args_list_or_empty':([100,],[123,]),'expr_list_or_empty':([54,],[95,]),'args_list':([100,],[124,]),'const':([2,6,13,16,23,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,64,66,72,73,98,101,104,114,130,131,132,133,145,146,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'choice_instr':([2,13,53,64,73,114,130,131,132,133,145,146,],[28,28,28,28,28,28,28,28,28,28,28,28,]),'blocks':([0,],[2,]),'condition':([66,72,104,],[108,113,129,]),'repeat_instr':([2,13,53,64,73,114,130,131,132,133,145,146,],[31,31,31,31,31,31,31,31,31,31,31,31,]),'labeled_instr':([2,13,53,64,73,114,130,131,132,133,145,146,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'init':([12,102,115,],[63,127,63,]),'block':([2,],[14,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> blocks','program',1,'p_program','Cparser.py',43),
  ('blocks -> blocks block','blocks',2,'p_blocks','Cparser.py',50),
  ('blocks -> <empty>','blocks',0,'p_blocks','Cparser.py',51),
  ('block -> declaration','block',1,'p_block','Cparser.py',59),
  ('block -> fundef','block',1,'p_block','Cparser.py',60),
  ('block -> instruction','block',1,'p_block','Cparser.py',61),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','Cparser.py',66),
  ('declarations -> <empty>','declarations',0,'p_declarations','Cparser.py',67),
  ('declaration -> TYPE inits ;','declaration',3,'p_declaration','Cparser.py',86),
  ('declaration -> error ;','declaration',2,'p_declaration','Cparser.py',87),
  ('inits -> inits , init','inits',3,'p_inits','Cparser.py',98),
  ('inits -> init','inits',1,'p_inits','Cparser.py',99),
  ('init -> ID = expression','init',3,'p_init','Cparser.py',108),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt','Cparser.py',115),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt','Cparser.py',116),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Cparser.py',129),
  ('instructions -> instruction','instructions',1,'p_instructions','Cparser.py',130),
  ('instruction -> print_instr','instruction',1,'p_instruction','Cparser.py',139),
  ('instruction -> labeled_instr','instruction',1,'p_instruction','Cparser.py',140),
  ('instruction -> assignment','instruction',1,'p_instruction','Cparser.py',141),
  ('instruction -> choice_instr','instruction',1,'p_instruction','Cparser.py',142),
  ('instruction -> while_instr','instruction',1,'p_instruction','Cparser.py',143),
  ('instruction -> repeat_instr','instruction',1,'p_instruction','Cparser.py',144),
  ('instruction -> return_instr','instruction',1,'p_instruction','Cparser.py',145),
  ('instruction -> break_instr','instruction',1,'p_instruction','Cparser.py',146),
  ('instruction -> continue_instr','instruction',1,'p_instruction','Cparser.py',147),
  ('instruction -> compound_instr','instruction',1,'p_instruction','Cparser.py',148),
  ('instruction -> expression ;','instruction',2,'p_instruction','Cparser.py',149),
  ('print_instr -> PRINT expr_list ;','print_instr',3,'p_print_instr','Cparser.py',162),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr','Cparser.py',163),
  ('labeled_instr -> ID : instruction','labeled_instr',3,'p_labeled_instr','Cparser.py',170),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Cparser.py',176),
  ('choice_instr -> IF ( condition ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',181),
  ('choice_instr -> IF ( condition ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',182),
  ('choice_instr -> IF ( error ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',183),
  ('choice_instr -> IF ( error ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',184),
  ('while_instr -> WHILE ( condition ) instruction','while_instr',5,'p_while_instr','Cparser.py',192),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_while_instr','Cparser.py',193),
  ('repeat_instr -> REPEAT instructions UNTIL condition ;','repeat_instr',5,'p_repeat_instr','Cparser.py',199),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','Cparser.py',204),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_instr','Cparser.py',209),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_instr','Cparser.py',213),
  ('compound_instr -> { declarations instructions_opt }','compound_instr',4,'p_compound_instr','Cparser.py',217),
  ('condition -> expression','condition',1,'p_condition','Cparser.py',222),
  ('const -> INTEGER','const',1,'p_const','Cparser.py',226),
  ('const -> FLOAT','const',1,'p_const','Cparser.py',227),
  ('const -> STRING','const',1,'p_const','Cparser.py',228),
  ('expression -> const','expression',1,'p_expression','Cparser.py',234),
  ('expression -> ID','expression',1,'p_expression','Cparser.py',235),
  ('expression -> expression + expression','expression',3,'p_expression','Cparser.py',236),
  ('expression -> expression - expression','expression',3,'p_expression','Cparser.py',237),
  ('expression -> expression * expression','expression',3,'p_expression','Cparser.py',238),
  ('expression -> expression / expression','expression',3,'p_expression','Cparser.py',239),
  ('expression -> expression % expression','expression',3,'p_expression','Cparser.py',240),
  ('expression -> expression | expression','expression',3,'p_expression','Cparser.py',241),
  ('expression -> expression & expression','expression',3,'p_expression','Cparser.py',242),
  ('expression -> expression ^ expression','expression',3,'p_expression','Cparser.py',243),
  ('expression -> expression AND expression','expression',3,'p_expression','Cparser.py',244),
  ('expression -> expression OR expression','expression',3,'p_expression','Cparser.py',245),
  ('expression -> expression SHL expression','expression',3,'p_expression','Cparser.py',246),
  ('expression -> expression SHR expression','expression',3,'p_expression','Cparser.py',247),
  ('expression -> expression EQ expression','expression',3,'p_expression','Cparser.py',248),
  ('expression -> expression NEQ expression','expression',3,'p_expression','Cparser.py',249),
  ('expression -> expression > expression','expression',3,'p_expression','Cparser.py',250),
  ('expression -> expression < expression','expression',3,'p_expression','Cparser.py',251),
  ('expression -> expression LE expression','expression',3,'p_expression','Cparser.py',252),
  ('expression -> expression GE expression','expression',3,'p_expression','Cparser.py',253),
  ('expression -> ( expression )','expression',3,'p_expression','Cparser.py',254),
  ('expression -> ( error )','expression',3,'p_expression','Cparser.py',255),
  ('expression -> ID ( expr_list_or_empty )','expression',4,'p_expression','Cparser.py',256),
  ('expression -> ID ( error )','expression',4,'p_expression','Cparser.py',257),
  ('expr_list_or_empty -> expr_list','expr_list_or_empty',1,'p_expr_list_or_empty','Cparser.py',284),
  ('expr_list_or_empty -> <empty>','expr_list_or_empty',0,'p_expr_list_or_empty','Cparser.py',285),
  ('expr_list -> expr_list , expression','expr_list',3,'p_expr_list','Cparser.py',296),
  ('expr_list -> expression','expr_list',1,'p_expr_list','Cparser.py',297),
  ('fundef -> TYPE ID ( args_list_or_empty ) compound_instr','fundef',6,'p_fundef','Cparser.py',313),
  ('args_list_or_empty -> args_list','args_list_or_empty',1,'p_args_list_or_empty','Cparser.py',322),
  ('args_list_or_empty -> <empty>','args_list_or_empty',0,'p_args_list_or_empty','Cparser.py',323),
  ('args_list -> args_list , arg','args_list',3,'p_args_list','Cparser.py',335),
  ('args_list -> arg','args_list',1,'p_args_list','Cparser.py',336),
  ('arg -> TYPE ID','arg',2,'p_arg','Cparser.py',350),
]

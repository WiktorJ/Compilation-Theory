
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'DC5B53C67466C9AC4788A1B1E71881CE'
    
_lr_action_items = {'RETURN':([0,2,4,7,8,11,12,14,16,17,18,19,23,24,25,27,31,33,41,42,44,47,48,64,68,69,73,74,75,82,87,109,110,112,116,117,122,123,124,125,133,134,135,137,138,142,143,145,146,147,],[-3,3,-19,-21,-22,-24,-20,3,-18,-17,-25,-4,-23,-6,-5,-16,-8,-2,3,-15,3,-40,-39,-26,-10,3,-38,-28,-27,-14,-29,-7,3,-9,3,3,-30,3,3,-41,-35,-36,-37,-31,-33,3,3,-74,-32,-34,]),'WHILE':([0,2,4,7,8,11,12,14,16,17,18,19,23,24,25,27,31,33,41,42,44,47,48,64,68,69,73,74,75,82,87,109,110,112,116,117,122,123,124,125,133,134,135,137,138,142,143,145,146,147,],[-3,6,-19,-21,-22,-24,-20,6,-18,-17,-25,-4,-23,-6,-5,-16,-8,-2,6,-15,6,-40,-39,-26,-10,6,-38,-28,-27,-14,-29,-7,6,-9,6,6,-30,6,6,-41,-35,-36,-37,-31,-33,6,6,-74,-32,-34,]),'PRINT':([0,2,4,7,8,11,12,14,16,17,18,19,23,24,25,27,31,33,41,42,44,47,48,64,68,69,73,74,75,82,87,109,110,112,116,117,122,123,124,125,133,134,135,137,138,142,143,145,146,147,],[-3,5,-19,-21,-22,-24,-20,5,-18,-17,-25,-4,-23,-6,-5,-16,-8,-2,5,-15,5,-40,-39,-26,-10,5,-38,-28,-27,-14,-29,-7,5,-9,5,5,-30,5,5,-41,-35,-36,-37,-31,-33,5,5,-74,-32,-34,]),'NEQ':([9,13,15,20,22,29,34,35,37,40,78,79,80,86,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,120,121,132,136,],[-47,-43,-45,-46,-44,65,-46,65,65,65,65,-67,-66,65,65,65,-59,None,-52,65,None,-58,-48,-50,-49,-51,65,None,None,None,None,65,65,-68,-69,65,65,]),'LE':([9,13,15,20,22,29,34,35,37,40,78,79,80,86,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,120,121,132,136,],[-47,-43,-45,-46,-44,51,-46,51,51,51,51,-67,-66,51,51,51,-59,None,-52,51,None,-58,-48,-50,-49,-51,51,None,None,None,None,51,51,-68,-69,51,51,]),'%':([9,13,15,20,22,29,34,35,37,40,78,79,80,86,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,120,121,132,136,],[-47,-43,-45,-46,-44,52,-46,52,52,52,52,-67,-66,52,52,52,52,52,-52,52,52,52,52,-50,52,-51,52,52,52,52,52,52,52,-68,-69,52,52,]),'&':([9,13,15,20,22,29,34,35,37,40,78,79,80,86,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,120,121,132,136,],[-47,-43,-45,-46,-44,53,-46,53,53,53,53,-67,-66,53,53,53,-59,-64,-52,-54,-63,-58,-48,-50,-49,-51,53,-60,-62,-65,-61,53,53,-68,-69,53,53,]),')':([9,13,15,22,34,39,40,43,76,77,78,79,80,83,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,114,120,121,128,129,130,136,141,144,],[-47,-43,-45,-44,-46,79,80,-71,116,117,-42,-67,-66,-70,120,121,-73,123,124,-56,-59,-64,-52,-54,-63,-58,-48,-50,-49,-51,-57,-60,-62,-65,-61,-53,-55,-76,-68,-69,-75,140,-78,-72,-79,-77,]),'(':([0,2,3,4,5,6,7,8,10,11,12,14,16,17,18,19,20,21,23,24,25,27,31,33,34,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,81,82,87,109,110,112,115,116,117,119,122,123,124,125,133,134,135,137,138,142,143,145,146,147,],[-3,10,10,-19,10,38,-21,-22,10,-24,-20,10,-18,-17,-25,-4,43,46,-23,-6,-5,-16,-8,-2,43,10,10,-15,10,10,10,10,-40,-39,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-26,10,10,10,-10,10,114,-38,-28,-27,10,-14,-29,-7,10,-9,10,10,10,10,-30,10,10,-41,-35,-36,-37,-31,-33,10,10,-74,-32,-34,]),'+':([9,13,15,20,22,29,34,35,37,40,78,79,80,86,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,120,121,132,136,],[-47,-43,-45,-46,-44,56,-46,56,56,56,56,-67,-66,56,56,56,56,56,-52,56,56,56,-48,-50,-49,-51,56,56,56,56,56,56,56,-68,-69,56,56,]),'*':([9,13,15,20,22,29,34,35,37,40,78,79,80,86,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,120,121,132,136,],[-47,-43,-45,-46,-44,57,-46,57,57,57,57,-67,-66,57,57,57,57,57,-52,57,57,57,57,-50,57,-51,57,57,57,57,57,57,57,-68,-69,57,57,]),'-':([9,13,15,20,22,29,34,35,37,40,78,79,80,86,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,120,121,132,136,],[-47,-43,-45,-46,-44,58,-46,58,58,58,58,-67,-66,58,58,58,58,58,-52,58,58,58,-48,-50,-49,-51,58,58,58,58,58,58,58,-68,-69,58,58,]),',':([9,13,15,22,34,70,71,79,80,83,86,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,120,121,127,128,130,132,136,141,144,],[-47,-43,-45,-44,-46,-12,113,-67,-66,119,-73,-56,-59,-64,-52,-54,-63,-58,-48,-50,-49,-51,-57,-60,-62,-65,-61,-53,-55,-68,-69,-11,139,-78,-13,-72,-79,-77,]),'/':([9,13,15,20,22,29,34,35,37,40,78,79,80,86,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,120,121,132,136,],[-47,-43,-45,-46,-44,59,-46,59,59,59,59,-67,-66,59,59,59,59,59,-52,59,59,59,59,-50,59,-51,59,59,59,59,59,59,59,-68,-69,59,59,]),'ID':([0,2,3,4,5,7,8,10,11,12,14,16,17,18,19,23,24,25,27,31,32,33,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,75,81,82,87,109,110,111,112,113,115,116,117,119,122,123,124,125,131,133,134,135,137,138,142,143,145,146,147,],[-3,20,34,-19,34,-21,-22,34,-24,-20,20,-18,-17,-25,-4,-23,-6,-5,-16,-8,72,-2,34,20,-15,34,20,34,34,-40,-39,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-26,34,34,34,-10,20,-38,-28,-27,34,-14,-29,-7,20,126,-9,126,34,20,20,34,-30,20,20,-41,141,-35,-36,-37,-31,-33,20,20,-74,-32,-34,]),'INTEGER':([0,2,3,4,5,7,8,10,11,12,14,16,17,18,19,23,24,25,27,31,33,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,75,81,82,87,109,110,112,115,116,117,119,122,123,124,125,133,134,135,137,138,142,143,145,146,147,],[-3,13,13,-19,13,-21,-22,13,-24,-20,13,-18,-17,-25,-4,-23,-6,-5,-16,-8,-2,13,13,-15,13,13,13,13,-40,-39,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-26,13,13,13,-10,13,-38,-28,-27,13,-14,-29,-7,13,-9,13,13,13,13,-30,13,13,-41,-35,-36,-37,-31,-33,13,13,-74,-32,-34,]),';':([9,13,15,20,22,26,28,29,30,34,35,36,37,70,71,78,79,80,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,118,120,121,127,132,],[-47,-43,-45,-46,-44,47,48,64,68,-46,73,74,75,-12,112,-42,-67,-66,122,-56,-59,-64,-52,-54,-63,-58,-48,-50,-49,-51,-57,-60,-62,-65,-61,-53,-55,135,-68,-69,-11,-13,]),'^':([9,13,15,20,22,29,34,35,37,40,78,79,80,86,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,120,121,132,136,],[-47,-43,-45,-46,-44,67,-46,67,67,67,67,-67,-66,67,67,67,-59,-64,-52,-54,-63,-58,-48,-50,-49,-51,67,-60,-62,-65,-61,67,-55,-68,-69,67,67,]),'=':([20,72,126,],[45,115,115,]),'<':([9,13,15,20,22,29,34,35,37,40,78,79,80,86,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,120,121,132,136,],[-47,-43,-45,-46,-44,54,-46,54,54,54,54,-67,-66,54,54,54,-59,None,-52,54,None,-58,-48,-50,-49,-51,54,None,None,None,None,54,54,-68,-69,54,54,]),'$end':([0,1,2,4,7,8,11,12,16,17,18,19,23,24,25,27,33,47,48,64,68,73,74,75,87,112,122,125,133,134,135,137,138,145,146,147,],[-3,0,-1,-19,-21,-22,-24,-20,-18,-17,-25,-4,-23,-6,-5,-16,-2,-40,-39,-26,-10,-38,-28,-27,-29,-9,-30,-41,-35,-36,-37,-31,-33,-74,-32,-34,]),'SHR':([9,13,15,20,22,29,34,35,37,40,78,79,80,86,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,120,121,132,136,],[-47,-43,-45,-46,-44,50,-46,50,50,50,50,-67,-66,50,50,50,-59,50,-52,50,50,-58,-48,-50,-49,-51,50,50,50,50,50,50,50,-68,-69,50,50,]),'REPEAT':([0,2,4,7,8,11,12,14,16,17,18,19,23,24,25,27,31,33,41,42,44,47,48,64,68,69,73,74,75,82,87,109,110,112,116,117,122,123,124,125,133,134,135,137,138,142,143,145,146,147,],[-3,14,-19,-21,-22,-24,-20,14,-18,-17,-25,-4,-23,-6,-5,-16,-8,-2,14,-15,14,-40,-39,-26,-10,14,-38,-28,-27,-14,-29,-7,14,-9,14,14,-30,14,14,-41,-35,-36,-37,-31,-33,14,14,-74,-32,-34,]),'STRING':([0,2,3,4,5,7,8,10,11,12,14,16,17,18,19,23,24,25,27,31,33,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,75,81,82,87,109,110,112,115,116,117,119,122,123,124,125,133,134,135,137,138,142,143,145,146,147,],[-3,15,15,-19,15,-21,-22,15,-24,-20,15,-18,-17,-25,-4,-23,-6,-5,-16,-8,-2,15,15,-15,15,15,15,15,-40,-39,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-26,15,15,15,-10,15,-38,-28,-27,15,-14,-29,-7,15,-9,15,15,15,15,-30,15,15,-41,-35,-36,-37,-31,-33,15,15,-74,-32,-34,]),'ELSE':([4,7,8,11,12,16,17,18,23,27,47,48,64,73,74,75,87,122,125,133,134,135,137,138,146,147,],[-19,-21,-22,-24,-20,-18,-17,-25,-23,-16,-40,-39,-26,-38,-28,-27,-29,-30,-41,-35,-36,-37,142,143,-32,-34,]),'GE':([9,13,15,20,22,29,34,35,37,40,78,79,80,86,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,120,121,132,136,],[-47,-43,-45,-46,-44,63,-46,63,63,63,63,-67,-66,63,63,63,-59,None,-52,63,None,-58,-48,-50,-49,-51,63,None,None,None,None,63,63,-68,-69,63,63,]),'EQ':([9,13,15,20,22,29,34,35,37,40,78,79,80,86,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,120,121,132,136,],[-47,-43,-45,-46,-44,61,-46,61,61,61,61,-67,-66,61,61,61,-59,None,-52,61,None,-58,-48,-50,-49,-51,61,None,None,None,None,61,61,-68,-69,61,61,]),'UNTIL':([4,7,8,11,12,16,17,18,23,27,41,42,47,48,64,73,74,75,82,87,122,125,133,134,135,137,138,146,147,],[-19,-21,-22,-24,-20,-18,-17,-25,-23,-16,81,-15,-40,-39,-26,-38,-28,-27,-14,-29,-30,-41,-35,-36,-37,-31,-33,-32,-34,]),'IF':([0,2,4,7,8,11,12,14,16,17,18,19,23,24,25,27,31,33,41,42,44,47,48,64,68,69,73,74,75,82,87,109,110,112,116,117,122,123,124,125,133,134,135,137,138,142,143,145,146,147,],[-3,21,-19,-21,-22,-24,-20,21,-18,-17,-25,-4,-23,-6,-5,-16,-8,-2,21,-15,21,-40,-39,-26,-10,21,-38,-28,-27,-14,-29,-7,21,-9,21,21,-30,21,21,-41,-35,-36,-37,-31,-33,21,21,-74,-32,-34,]),'AND':([9,13,15,20,22,29,34,35,37,40,78,79,80,86,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,120,121,132,136,],[-47,-43,-45,-46,-44,49,-46,49,49,49,49,-67,-66,49,49,-56,-59,-64,-52,-54,-63,-58,-48,-50,-49,-51,49,-60,-62,-65,-61,-53,-55,-68,-69,49,49,]),':':([20,],[44,]),'SHL':([9,13,15,20,22,29,34,35,37,40,78,79,80,86,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,120,121,132,136,],[-47,-43,-45,-46,-44,55,-46,55,55,55,55,-67,-66,55,55,55,-59,55,-52,55,55,-58,-48,-50,-49,-51,55,55,55,55,55,55,55,-68,-69,55,55,]),'TYPE':([0,2,4,7,8,11,12,16,17,18,19,23,24,25,27,31,33,47,48,64,68,69,73,74,75,87,109,112,114,122,125,133,134,135,137,138,139,145,146,147,],[-3,32,-19,-21,-22,-24,-20,-18,-17,-25,-4,-23,-6,-5,-16,-8,-2,-40,-39,-26,-10,111,-38,-28,-27,-29,-7,-9,131,-30,-41,-35,-36,-37,-31,-33,131,-74,-32,-34,]),'FLOAT':([0,2,3,4,5,7,8,10,11,12,14,16,17,18,19,23,24,25,27,31,33,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,75,81,82,87,109,110,112,115,116,117,119,122,123,124,125,133,134,135,137,138,142,143,145,146,147,],[-3,22,22,-19,22,-21,-22,22,-24,-20,22,-18,-17,-25,-4,-23,-6,-5,-16,-8,-2,22,22,-15,22,22,22,22,-40,-39,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-26,22,22,22,-10,22,-38,-28,-27,22,-14,-29,-7,22,-9,22,22,22,22,-30,22,22,-41,-35,-36,-37,-31,-33,22,22,-74,-32,-34,]),'|':([9,13,15,20,22,29,34,35,37,40,78,79,80,86,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,120,121,132,136,],[-47,-43,-45,-46,-44,66,-46,66,66,66,66,-67,-66,66,66,66,-59,-64,-52,-54,-63,-58,-48,-50,-49,-51,66,-60,-62,-65,-61,-53,-55,-68,-69,66,66,]),'BREAK':([0,2,4,7,8,11,12,14,16,17,18,19,23,24,25,27,31,33,41,42,44,47,48,64,68,69,73,74,75,82,87,109,110,112,116,117,122,123,124,125,133,134,135,137,138,142,143,145,146,147,],[-3,26,-19,-21,-22,-24,-20,26,-18,-17,-25,-4,-23,-6,-5,-16,-8,-2,26,-15,26,-40,-39,-26,-10,26,-38,-28,-27,-14,-29,-7,26,-9,26,26,-30,26,26,-41,-35,-36,-37,-31,-33,26,26,-74,-32,-34,]),'CONTINUE':([0,2,4,7,8,11,12,14,16,17,18,19,23,24,25,27,31,33,41,42,44,47,48,64,68,69,73,74,75,82,87,109,110,112,116,117,122,123,124,125,133,134,135,137,138,142,143,145,146,147,],[-3,28,-19,-21,-22,-24,-20,28,-18,-17,-25,-4,-23,-6,-5,-16,-8,-2,28,-15,28,-40,-39,-26,-10,28,-38,-28,-27,-14,-29,-7,28,-9,28,28,-30,28,28,-41,-35,-36,-37,-31,-33,28,28,-74,-32,-34,]),'error':([0,2,4,5,7,8,10,11,12,16,17,18,19,23,24,25,27,31,33,38,43,46,47,48,64,68,69,73,74,75,87,109,112,122,125,133,134,135,137,138,145,146,147,],[-3,30,-19,36,-21,-22,39,-24,-20,-18,-17,-25,-4,-23,-6,-5,-16,-8,-2,77,85,90,-40,-39,-26,-10,30,-38,-28,-27,-29,-7,-9,-30,-41,-35,-36,-37,-31,-33,-74,-32,-34,]),'{':([0,2,4,7,8,11,12,14,16,17,18,19,23,24,25,27,31,33,41,42,44,47,48,64,68,69,73,74,75,82,87,109,110,112,116,117,122,123,124,125,133,134,135,137,138,140,142,143,145,146,147,],[-3,31,-19,-21,-22,-24,-20,31,-18,-17,-25,-4,-23,-6,-5,-16,-8,-2,31,-15,31,-40,-39,-26,-10,31,-38,-28,-27,-14,-29,-7,31,-9,31,31,-30,31,31,-41,-35,-36,-37,-31,-33,31,31,31,-74,-32,-34,]),'>':([9,13,15,20,22,29,34,35,37,40,78,79,80,86,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,120,121,132,136,],[-47,-43,-45,-46,-44,62,-46,62,62,62,62,-67,-66,62,62,62,-59,None,-52,62,None,-58,-48,-50,-49,-51,62,None,None,None,None,62,62,-68,-69,62,62,]),'}':([4,7,8,11,12,16,17,18,23,27,42,47,48,64,73,74,75,82,87,110,122,125,133,134,135,137,138,146,147,],[-19,-21,-22,-24,-20,-18,-17,-25,-23,-16,-15,-40,-39,-26,-38,-28,-27,-14,-29,125,-30,-41,-35,-36,-37,-31,-33,-32,-34,]),'OR':([9,13,15,20,22,29,34,35,37,40,78,79,80,86,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,120,121,132,136,],[-47,-43,-45,-46,-44,60,-46,60,60,60,60,-67,-66,60,60,-56,-59,-64,-52,-54,-63,-58,-48,-50,-49,-51,-57,-60,-62,-65,-61,-53,-55,-68,-69,60,60,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instruction':([2,14,41,44,69,110,116,117,123,124,142,143,],[24,42,82,87,42,82,133,134,137,138,146,147,]),'expr_list':([43,],[83,]),'choice_instr':([2,14,41,44,69,110,116,117,123,124,142,143,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'arg':([114,139,],[130,144,]),'repeat_instr':([2,14,41,44,69,110,116,117,123,124,142,143,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'return_instr':([2,14,41,44,69,110,116,117,123,124,142,143,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'const':([2,3,5,10,14,38,41,43,44,45,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,69,81,110,115,116,117,119,123,124,142,143,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'continue_instr':([2,14,41,44,69,110,116,117,123,124,142,143,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'while_instr':([2,14,41,44,69,110,116,117,123,124,142,143,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'init':([32,111,113,],[70,70,127,]),'program':([0,],[1,]),'blocks':([0,],[2,]),'assignment':([2,14,41,44,69,110,116,117,123,124,142,143,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'labeled_instr':([2,14,41,44,69,110,116,117,123,124,142,143,],[17,17,17,17,17,17,17,17,17,17,17,17,]),'compound_instr':([2,14,41,44,69,110,116,117,123,124,140,142,143,],[18,18,18,18,18,18,18,18,18,18,145,18,18,]),'inits':([32,111,],[71,71,]),'declaration':([2,69,],[19,109,]),'args_list':([114,],[128,]),'condition':([38,46,81,],[76,89,118,]),'instructions':([14,69,],[41,110,]),'expr_list_or_empty':([43,],[84,]),'break_instr':([2,14,41,44,69,110,116,117,123,124,142,143,],[23,23,23,23,23,23,23,23,23,23,23,23,]),'declarations':([31,],[69,]),'args_list_or_empty':([114,],[129,]),'fundef':([2,],[25,]),'print_instr':([2,14,41,44,69,110,116,117,123,124,142,143,],[27,27,27,27,27,27,27,27,27,27,27,27,]),'expression':([2,3,5,10,14,38,41,43,44,45,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,69,81,110,115,116,117,119,123,124,142,143,],[29,35,37,40,29,78,29,86,29,88,78,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,29,78,29,132,29,29,136,29,29,29,29,]),'block':([2,],[33,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> blocks','program',1,'p_program','Cparser.py',43),
  ('blocks -> blocks block','blocks',2,'p_blocks','Cparser.py',50),
  ('blocks -> <empty>','blocks',0,'p_blocks','Cparser.py',51),
  ('block -> declaration','block',1,'p_block','Cparser.py',60),
  ('block -> fundef','block',1,'p_block','Cparser.py',61),
  ('block -> instruction','block',1,'p_block','Cparser.py',62),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','Cparser.py',67),
  ('declarations -> <empty>','declarations',0,'p_declarations','Cparser.py',68),
  ('declaration -> TYPE inits ;','declaration',3,'p_declaration','Cparser.py',88),
  ('declaration -> error ;','declaration',2,'p_declaration','Cparser.py',89),
  ('inits -> inits , init','inits',3,'p_inits','Cparser.py',100),
  ('inits -> init','inits',1,'p_inits','Cparser.py',101),
  ('init -> ID = expression','init',3,'p_init','Cparser.py',112),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Cparser.py',133),
  ('instructions -> instruction','instructions',1,'p_instructions','Cparser.py',134),
  ('instruction -> print_instr','instruction',1,'p_instruction','Cparser.py',145),
  ('instruction -> labeled_instr','instruction',1,'p_instruction','Cparser.py',146),
  ('instruction -> assignment','instruction',1,'p_instruction','Cparser.py',147),
  ('instruction -> choice_instr','instruction',1,'p_instruction','Cparser.py',148),
  ('instruction -> while_instr','instruction',1,'p_instruction','Cparser.py',149),
  ('instruction -> repeat_instr','instruction',1,'p_instruction','Cparser.py',150),
  ('instruction -> return_instr','instruction',1,'p_instruction','Cparser.py',151),
  ('instruction -> break_instr','instruction',1,'p_instruction','Cparser.py',152),
  ('instruction -> continue_instr','instruction',1,'p_instruction','Cparser.py',153),
  ('instruction -> compound_instr','instruction',1,'p_instruction','Cparser.py',154),
  ('instruction -> expression ;','instruction',2,'p_instruction','Cparser.py',155),
  ('print_instr -> PRINT expression ;','print_instr',3,'p_print_instr','Cparser.py',168),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr','Cparser.py',169),
  ('labeled_instr -> ID : instruction','labeled_instr',3,'p_labeled_instr','Cparser.py',176),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Cparser.py',182),
  ('choice_instr -> IF ( condition ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',187),
  ('choice_instr -> IF ( condition ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',188),
  ('choice_instr -> IF ( error ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',189),
  ('choice_instr -> IF ( error ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',190),
  ('while_instr -> WHILE ( condition ) instruction','while_instr',5,'p_while_instr','Cparser.py',202),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_while_instr','Cparser.py',203),
  ('repeat_instr -> REPEAT instructions UNTIL condition ;','repeat_instr',5,'p_repeat_instr','Cparser.py',209),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','Cparser.py',214),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_instr','Cparser.py',219),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_instr','Cparser.py',223),
  ('compound_instr -> { declarations instructions }','compound_instr',4,'p_compound_instr','Cparser.py',227),
  ('condition -> expression','condition',1,'p_condition','Cparser.py',232),
  ('const -> INTEGER','const',1,'p_const','Cparser.py',236),
  ('const -> FLOAT','const',1,'p_const','Cparser.py',237),
  ('const -> STRING','const',1,'p_const','Cparser.py',238),
  ('expression -> ID','expression',1,'p_expression_id','Cparser.py',250),
  ('expression -> const','expression',1,'p_expression','Cparser.py',254),
  ('expression -> expression + expression','expression',3,'p_expression','Cparser.py',255),
  ('expression -> expression - expression','expression',3,'p_expression','Cparser.py',256),
  ('expression -> expression * expression','expression',3,'p_expression','Cparser.py',257),
  ('expression -> expression / expression','expression',3,'p_expression','Cparser.py',258),
  ('expression -> expression % expression','expression',3,'p_expression','Cparser.py',259),
  ('expression -> expression | expression','expression',3,'p_expression','Cparser.py',260),
  ('expression -> expression & expression','expression',3,'p_expression','Cparser.py',261),
  ('expression -> expression ^ expression','expression',3,'p_expression','Cparser.py',262),
  ('expression -> expression AND expression','expression',3,'p_expression','Cparser.py',263),
  ('expression -> expression OR expression','expression',3,'p_expression','Cparser.py',264),
  ('expression -> expression SHL expression','expression',3,'p_expression','Cparser.py',265),
  ('expression -> expression SHR expression','expression',3,'p_expression','Cparser.py',266),
  ('expression -> expression EQ expression','expression',3,'p_expression','Cparser.py',267),
  ('expression -> expression NEQ expression','expression',3,'p_expression','Cparser.py',268),
  ('expression -> expression > expression','expression',3,'p_expression','Cparser.py',269),
  ('expression -> expression < expression','expression',3,'p_expression','Cparser.py',270),
  ('expression -> expression LE expression','expression',3,'p_expression','Cparser.py',271),
  ('expression -> expression GE expression','expression',3,'p_expression','Cparser.py',272),
  ('expression -> ( expression )','expression',3,'p_expression','Cparser.py',273),
  ('expression -> ( error )','expression',3,'p_expression','Cparser.py',274),
  ('expression -> ID ( expr_list_or_empty )','expression',4,'p_expression','Cparser.py',275),
  ('expression -> ID ( error )','expression',4,'p_expression','Cparser.py',276),
  ('expr_list_or_empty -> expr_list','expr_list_or_empty',1,'p_expr_list_or_empty','Cparser.py',314),
  ('expr_list_or_empty -> <empty>','expr_list_or_empty',0,'p_expr_list_or_empty','Cparser.py',315),
  ('expr_list -> expr_list , expression','expr_list',3,'p_expr_list','Cparser.py',326),
  ('expr_list -> expression','expr_list',1,'p_expr_list','Cparser.py',327),
  ('fundef -> TYPE ID ( args_list_or_empty ) compound_instr','fundef',6,'p_fundef','Cparser.py',344),
  ('args_list_or_empty -> args_list','args_list_or_empty',1,'p_args_list_or_empty','Cparser.py',353),
  ('args_list_or_empty -> <empty>','args_list_or_empty',0,'p_args_list_or_empty','Cparser.py',354),
  ('args_list -> args_list , arg','args_list',3,'p_args_list','Cparser.py',368),
  ('args_list -> arg','args_list',1,'p_args_list','Cparser.py',369),
  ('arg -> TYPE ID','arg',2,'p_arg','Cparser.py',386),
]

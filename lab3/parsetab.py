
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '0FA5238B2199C67FCC84186823DBA502'
    
_lr_action_items = {')':([6,10,30,31,60,66,67,69,70,76,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,112,113,115,116,118,120,121,128,129,131,136,142,],[-47,-44,-45,-43,-71,-73,-46,112,113,-76,-42,125,126,-50,-60,-61,-59,-51,-55,-62,-58,-63,-65,-54,-49,-57,-48,-53,-56,-64,-52,-70,128,129,-66,-67,132,133,-75,-78,137,-68,-69,-72,-79,-77,]),'EQ':([6,9,10,14,30,31,66,67,69,71,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,112,113,122,128,129,131,],[-47,41,-44,-46,-45,-43,41,-46,41,41,41,-50,None,None,-59,-51,41,None,-58,None,None,41,-49,41,-48,41,41,None,-52,41,-66,-67,41,-68,-69,41,]),'(':([0,1,3,4,7,8,11,12,13,14,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,72,73,74,75,77,78,102,103,108,109,110,111,114,125,126,127,130,132,133,134,138,139,140,141,143,144,145,146,147,],[-3,19,-4,19,39,-23,-5,-6,-8,60,-2,19,19,-16,19,-20,-22,-18,72,-24,-19,-17,-25,-21,-15,19,76,19,19,19,19,19,19,19,19,19,-26,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-10,-40,60,19,-39,19,-14,19,-9,19,-7,-29,19,-27,-28,-38,19,19,-41,-30,19,19,-37,-35,-36,-31,-33,-74,19,19,-32,-34,]),'NEQ':([6,9,10,14,30,31,66,67,69,71,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,112,113,122,128,129,131,],[-47,42,-44,-46,-45,-43,42,-46,42,42,42,-50,None,None,-59,-51,42,None,-58,None,None,42,-49,42,-48,42,42,None,-52,42,-66,-67,42,-68,-69,42,]),'^':([6,9,10,14,30,31,66,67,69,71,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,112,113,122,128,129,131,],[-47,45,-44,-46,-45,-43,45,-46,45,45,45,-50,-60,-61,-59,-51,-55,-62,-58,-63,-65,-54,-49,45,-48,45,45,-64,-52,45,-66,-67,45,-68,-69,45,]),'<':([6,9,10,14,30,31,66,67,69,71,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,112,113,122,128,129,131,],[-47,49,-44,-46,-45,-43,49,-46,49,49,49,-50,None,None,-59,-51,49,None,-58,None,None,49,-49,49,-48,49,49,None,-52,49,-66,-67,49,-68,-69,49,]),'$end':([0,1,2,3,8,11,12,17,20,22,23,24,26,27,28,32,33,48,63,64,73,78,108,110,111,114,127,130,134,138,139,140,141,143,146,147,],[-3,-1,0,-4,-23,-5,-6,-2,-16,-20,-22,-18,-24,-19,-17,-25,-21,-26,-10,-40,-39,-9,-29,-27,-28,-38,-41,-30,-37,-35,-36,-31,-33,-74,-32,-34,]),';':([6,9,10,14,15,16,29,30,31,36,38,65,66,67,68,71,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,112,113,117,122,123,128,129,131,],[-47,48,-44,-46,63,64,73,-45,-43,-12,78,110,-73,-46,111,114,-42,-50,-60,-61,-59,-51,-55,-62,-58,-63,-65,-54,-49,-57,-48,-53,-56,-64,-52,130,-66,-67,134,-13,-11,-68,-69,-72,]),'+':([6,9,10,14,30,31,66,67,69,71,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,112,113,122,128,129,131,],[-47,54,-44,-46,-45,-43,54,-46,54,54,54,-50,54,54,54,-51,54,54,54,54,54,54,-49,54,-48,54,54,54,-52,54,-66,-67,54,-68,-69,54,]),'REPEAT':([0,1,3,4,8,11,12,13,17,20,22,23,24,26,27,28,32,33,34,35,48,59,62,63,64,73,75,78,102,103,108,110,111,114,125,126,127,130,132,133,134,138,139,140,141,143,144,145,146,147,],[-3,4,-4,4,-23,-5,-6,-8,-2,-16,-20,-22,-18,-24,-19,-17,-25,-21,-15,4,-26,4,4,-10,-40,-39,-14,-9,4,-7,-29,-27,-28,-38,4,4,-41,-30,4,4,-37,-35,-36,-31,-33,-74,4,4,-32,-34,]),'TYPE':([0,1,3,8,11,12,13,17,20,22,23,24,26,27,28,32,33,48,59,63,64,73,76,78,103,108,110,111,114,127,130,134,135,138,139,140,141,143,146,147,],[-3,5,-4,-23,-5,-6,-8,-2,-16,-20,-22,-18,-24,-19,-17,-25,-21,-26,101,-10,-40,-39,119,-9,-7,-29,-27,-28,-38,-41,-30,-37,119,-35,-36,-31,-33,-74,-32,-34,]),'RETURN':([0,1,3,4,8,11,12,13,17,20,22,23,24,26,27,28,32,33,34,35,48,59,62,63,64,73,75,78,102,103,108,110,111,114,125,126,127,130,132,133,134,138,139,140,141,143,144,145,146,147,],[-3,21,-4,21,-23,-5,-6,-8,-2,-16,-20,-22,-18,-24,-19,-17,-25,-21,-15,21,-26,21,21,-10,-40,-39,-14,-9,21,-7,-29,-27,-28,-38,21,21,-41,-30,21,21,-37,-35,-36,-31,-33,-74,21,21,-32,-34,]),'-':([6,9,10,14,30,31,66,67,69,71,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,112,113,122,128,129,131,],[-47,52,-44,-46,-45,-43,52,-46,52,52,52,-50,52,52,52,-51,52,52,52,52,52,52,-49,52,-48,52,52,52,-52,52,-66,-67,52,-68,-69,52,]),'=':([14,37,124,],[61,77,77,]),'FLOAT':([0,1,3,4,8,11,12,13,17,18,19,20,21,22,23,24,26,27,28,32,33,34,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,72,73,74,75,77,78,102,103,108,109,110,111,114,125,126,127,130,132,133,134,138,139,140,141,143,144,145,146,147,],[-3,10,-4,10,-23,-5,-6,-8,-2,10,10,-16,10,-20,-22,-18,-24,-19,-17,-25,-21,-15,10,10,10,10,10,10,10,10,10,10,-26,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-10,-40,10,-39,10,-14,10,-9,10,-7,-29,10,-27,-28,-38,10,10,-41,-30,10,10,-37,-35,-36,-31,-33,-74,10,10,-32,-34,]),'WHILE':([0,1,3,4,8,11,12,13,17,20,22,23,24,26,27,28,32,33,34,35,48,59,62,63,64,73,75,78,102,103,108,110,111,114,125,126,127,130,132,133,134,138,139,140,141,143,144,145,146,147,],[-3,7,-4,7,-23,-5,-6,-8,-2,-16,-20,-22,-18,-24,-19,-17,-25,-21,-15,7,-26,7,7,-10,-40,-39,-14,-9,7,-7,-29,-27,-28,-38,7,7,-41,-30,7,7,-37,-35,-36,-31,-33,-74,7,7,-32,-34,]),'|':([6,9,10,14,30,31,66,67,69,71,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,112,113,122,128,129,131,],[-47,55,-44,-46,-45,-43,55,-46,55,55,55,-50,-60,-61,-59,-51,-55,-62,-58,-63,-65,-54,-49,55,-48,-53,55,-64,-52,55,-66,-67,55,-68,-69,55,]),'UNTIL':([8,20,22,23,24,26,27,28,32,33,34,35,48,64,73,75,108,110,111,114,127,130,134,138,139,140,141,146,147,],[-23,-16,-20,-22,-18,-24,-19,-17,-25,-21,-15,74,-26,-40,-39,-14,-29,-27,-28,-38,-41,-30,-37,-35,-36,-31,-33,-32,-34,]),'ELSE':([8,20,22,23,24,26,27,28,32,33,48,64,73,108,110,111,114,127,130,134,138,139,140,141,146,147,],[-23,-16,-20,-22,-18,-24,-19,-17,-25,-21,-26,-40,-39,-29,-27,-28,-38,-41,-30,-37,-35,-36,144,145,-32,-34,]),'STRING':([0,1,3,4,8,11,12,13,17,18,19,20,21,22,23,24,26,27,28,32,33,34,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,72,73,74,75,77,78,102,103,108,109,110,111,114,125,126,127,130,132,133,134,138,139,140,141,143,144,145,146,147,],[-3,30,-4,30,-23,-5,-6,-8,-2,30,30,-16,30,-20,-22,-18,-24,-19,-17,-25,-21,-15,30,30,30,30,30,30,30,30,30,30,-26,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-10,-40,30,-39,30,-14,30,-9,30,-7,-29,30,-27,-28,-38,30,30,-41,-30,30,30,-37,-35,-36,-31,-33,-74,30,30,-32,-34,]),'LE':([6,9,10,14,30,31,66,67,69,71,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,112,113,122,128,129,131,],[-47,57,-44,-46,-45,-43,57,-46,57,57,57,-50,None,None,-59,-51,57,None,-58,None,None,57,-49,57,-48,57,57,None,-52,57,-66,-67,57,-68,-69,57,]),'IF':([0,1,3,4,8,11,12,13,17,20,22,23,24,26,27,28,32,33,34,35,48,59,62,63,64,73,75,78,102,103,108,110,111,114,125,126,127,130,132,133,134,138,139,140,141,143,144,145,146,147,],[-3,25,-4,25,-23,-5,-6,-8,-2,-16,-20,-22,-18,-24,-19,-17,-25,-21,-15,25,-26,25,25,-10,-40,-39,-14,-9,25,-7,-29,-27,-28,-38,25,25,-41,-30,25,25,-37,-35,-36,-31,-33,-74,25,25,-32,-34,]),'*':([6,9,10,14,30,31,66,67,69,71,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,112,113,122,128,129,131,],[-47,40,-44,-46,-45,-43,40,-46,40,40,40,-50,40,40,40,-51,40,40,40,40,40,40,40,40,40,40,40,40,-52,40,-66,-67,40,-68,-69,40,]),'OR':([6,9,10,14,30,31,66,67,69,71,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,112,113,122,128,129,131,],[-47,53,-44,-46,-45,-43,53,-46,53,53,53,-50,-60,-61,-59,-51,-55,-62,-58,-63,-65,-54,-49,-57,-48,-53,-56,-64,-52,53,-66,-67,53,-68,-69,53,]),':':([14,],[62,]),'/':([6,9,10,14,30,31,66,67,69,71,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,112,113,122,128,129,131,],[-47,44,-44,-46,-45,-43,44,-46,44,44,44,-50,44,44,44,-51,44,44,44,44,44,44,44,44,44,44,44,44,-52,44,-66,-67,44,-68,-69,44,]),'CONTINUE':([0,1,3,4,8,11,12,13,17,20,22,23,24,26,27,28,32,33,34,35,48,59,62,63,64,73,75,78,102,103,108,110,111,114,125,126,127,130,132,133,134,138,139,140,141,143,144,145,146,147,],[-3,29,-4,29,-23,-5,-6,-8,-2,-16,-20,-22,-18,-24,-19,-17,-25,-21,-15,29,-26,29,29,-10,-40,-39,-14,-9,29,-7,-29,-27,-28,-38,29,29,-41,-30,29,29,-37,-35,-36,-31,-33,-74,29,29,-32,-34,]),'>':([6,9,10,14,30,31,66,67,69,71,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,112,113,122,128,129,131,],[-47,46,-44,-46,-45,-43,46,-46,46,46,46,-50,None,None,-59,-51,46,None,-58,None,None,46,-49,46,-48,46,46,None,-52,46,-66,-67,46,-68,-69,46,]),'}':([8,20,22,23,24,26,27,28,32,33,34,48,64,73,75,102,108,110,111,114,127,130,134,138,139,140,141,146,147,],[-23,-16,-20,-22,-18,-24,-19,-17,-25,-21,-15,-26,-40,-39,-14,127,-29,-27,-28,-38,-41,-30,-37,-35,-36,-31,-33,-32,-34,]),'GE':([6,9,10,14,30,31,66,67,69,71,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,112,113,122,128,129,131,],[-47,50,-44,-46,-45,-43,50,-46,50,50,50,-50,None,None,-59,-51,50,None,-58,None,None,50,-49,50,-48,50,50,None,-52,50,-66,-67,50,-68,-69,50,]),'ID':([0,1,3,4,5,8,11,12,13,17,18,19,20,21,22,23,24,26,27,28,32,33,34,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,72,73,74,75,77,78,79,101,102,103,108,109,110,111,114,119,125,126,127,130,132,133,134,138,139,140,141,143,144,145,146,147,],[-3,14,-4,14,37,-23,-5,-6,-8,-2,67,67,-16,67,-20,-22,-18,-24,-19,-17,-25,-21,-15,14,67,67,67,67,67,67,67,67,67,-26,67,67,67,67,67,67,67,67,67,67,14,67,67,14,-10,-40,67,-39,67,-14,67,-9,124,124,14,-7,-29,67,-27,-28,-38,136,14,14,-41,-30,14,14,-37,-35,-36,-31,-33,-74,14,14,-32,-34,]),'INTEGER':([0,1,3,4,8,11,12,13,17,18,19,20,21,22,23,24,26,27,28,32,33,34,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,72,73,74,75,77,78,102,103,108,109,110,111,114,125,126,127,130,132,133,134,138,139,140,141,143,144,145,146,147,],[-3,31,-4,31,-23,-5,-6,-8,-2,31,31,-16,31,-20,-22,-18,-24,-19,-17,-25,-21,-15,31,31,31,31,31,31,31,31,31,31,-26,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-10,-40,31,-39,31,-14,31,-9,31,-7,-29,31,-27,-28,-38,31,31,-41,-30,31,31,-37,-35,-36,-31,-33,-74,31,31,-32,-34,]),'{':([0,1,3,4,8,11,12,13,17,20,22,23,24,26,27,28,32,33,34,35,48,59,62,63,64,73,75,78,102,103,108,110,111,114,125,126,127,130,132,133,134,137,138,139,140,141,143,144,145,146,147,],[-3,13,-4,13,-23,-5,-6,-8,-2,-16,-20,-22,-18,-24,-19,-17,-25,-21,-15,13,-26,13,13,-10,-40,-39,-14,-9,13,-7,-29,-27,-28,-38,13,13,-41,-30,13,13,-37,13,-35,-36,-31,-33,-74,13,13,-32,-34,]),'error':([0,1,3,8,11,12,13,17,18,19,20,22,23,24,26,27,28,32,33,39,48,59,60,63,64,72,73,78,103,108,110,111,114,127,130,134,138,139,140,141,143,146,147,],[-3,15,-4,-23,-5,-6,-8,-2,68,70,-16,-20,-22,-18,-24,-19,-17,-25,-21,82,-26,15,106,-10,-40,116,-39,-9,-7,-29,-27,-28,-38,-41,-30,-37,-35,-36,-31,-33,-74,-32,-34,]),'&':([6,9,10,14,30,31,66,67,69,71,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,112,113,122,128,129,131,],[-47,51,-44,-46,-45,-43,51,-46,51,51,51,-50,-60,-61,-59,-51,51,-62,-58,-63,-65,-54,-49,51,-48,51,51,-64,-52,51,-66,-67,51,-68,-69,51,]),'SHR':([6,9,10,14,30,31,66,67,69,71,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,112,113,122,128,129,131,],[-47,43,-44,-46,-45,-43,43,-46,43,43,43,-50,43,43,-59,-51,43,43,-58,43,43,43,-49,43,-48,43,43,43,-52,43,-66,-67,43,-68,-69,43,]),'BREAK':([0,1,3,4,8,11,12,13,17,20,22,23,24,26,27,28,32,33,34,35,48,59,62,63,64,73,75,78,102,103,108,110,111,114,125,126,127,130,132,133,134,138,139,140,141,143,144,145,146,147,],[-3,16,-4,16,-23,-5,-6,-8,-2,-16,-20,-22,-18,-24,-19,-17,-25,-21,-15,16,-26,16,16,-10,-40,-39,-14,-9,16,-7,-29,-27,-28,-38,16,16,-41,-30,16,16,-37,-35,-36,-31,-33,-74,16,16,-32,-34,]),',':([6,10,30,31,36,38,65,66,67,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,112,113,118,120,122,123,128,129,131,136,142,],[-47,-44,-45,-43,-12,79,109,-73,-46,-50,-60,-61,-59,-51,-55,-62,-58,-63,-65,-54,-49,-57,-48,-53,-56,-64,-52,109,-66,-67,135,-78,-13,-11,-68,-69,-72,-79,-77,]),'%':([6,9,10,14,30,31,66,67,69,71,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,112,113,122,128,129,131,],[-47,58,-44,-46,-45,-43,58,-46,58,58,58,-50,58,58,58,-51,58,58,58,58,58,58,58,58,58,58,58,58,-52,58,-66,-67,58,-68,-69,58,]),'AND':([6,9,10,14,30,31,66,67,69,71,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,112,113,122,128,129,131,],[-47,56,-44,-46,-45,-43,56,-46,56,56,56,-50,-60,-61,-59,-51,-55,-62,-58,-63,-65,-54,-49,56,-48,-53,-56,-64,-52,56,-66,-67,56,-68,-69,56,]),'SHL':([6,9,10,14,30,31,66,67,69,71,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,112,113,122,128,129,131,],[-47,47,-44,-46,-45,-43,47,-46,47,47,47,-50,47,47,-59,-51,47,47,-58,47,47,47,-49,47,-48,47,47,47,-52,47,-66,-67,47,-68,-69,47,]),'PRINT':([0,1,3,4,8,11,12,13,17,20,22,23,24,26,27,28,32,33,34,35,48,59,62,63,64,73,75,78,102,103,108,110,111,114,125,126,127,130,132,133,134,138,139,140,141,143,144,145,146,147,],[-3,18,-4,18,-23,-5,-6,-8,-2,-16,-20,-22,-18,-24,-19,-17,-25,-21,-15,18,-26,18,18,-10,-40,-39,-14,-9,18,-7,-29,-27,-28,-38,18,18,-41,-30,18,18,-37,-35,-36,-31,-33,-74,18,18,-32,-34,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'condition':([39,72,74,],[81,115,117,]),'args_list':([76,],[118,]),'print_instr':([1,4,35,59,62,102,125,126,132,133,144,145,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'declaration':([1,59,],[3,103,]),'inits':([5,101,],[38,38,]),'args_list_or_empty':([76,],[121,]),'expr_list':([18,60,],[65,104,]),'instructions':([4,59,],[35,102,]),'const':([1,4,18,19,21,35,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,72,74,77,102,109,125,126,132,133,144,145,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'break_instr':([1,4,35,59,62,102,125,126,132,133,144,145,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'expression':([1,4,18,19,21,35,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,72,74,77,102,109,125,126,132,133,144,145,],[9,9,66,69,71,9,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,9,66,107,9,80,80,122,9,131,9,9,9,9,9,9,]),'while_instr':([1,4,35,59,62,102,125,126,132,133,144,145,],[22,22,22,22,22,22,22,22,22,22,22,22,]),'fundef':([1,],[11,]),'instruction':([1,4,35,59,62,102,125,126,132,133,144,145,],[12,34,75,34,108,75,138,139,140,141,146,147,]),'return_instr':([1,4,35,59,62,102,125,126,132,133,144,145,],[23,23,23,23,23,23,23,23,23,23,23,23,]),'assignment':([1,4,35,59,62,102,125,126,132,133,144,145,],[24,24,24,24,24,24,24,24,24,24,24,24,]),'continue_instr':([1,4,35,59,62,102,125,126,132,133,144,145,],[26,26,26,26,26,26,26,26,26,26,26,26,]),'choice_instr':([1,4,35,59,62,102,125,126,132,133,144,145,],[27,27,27,27,27,27,27,27,27,27,27,27,]),'labeled_instr':([1,4,35,59,62,102,125,126,132,133,144,145,],[28,28,28,28,28,28,28,28,28,28,28,28,]),'expr_list_or_empty':([60,],[105,]),'init':([5,79,101,],[36,123,36,]),'blocks':([0,],[1,]),'arg':([76,135,],[120,142,]),'program':([0,],[2,]),'declarations':([13,],[59,]),'compound_instr':([1,4,35,59,62,102,125,126,132,133,137,144,145,],[32,32,32,32,32,32,32,32,32,32,143,32,32,]),'block':([1,],[17,]),'repeat_instr':([1,4,35,59,62,102,125,126,132,133,144,145,],[33,33,33,33,33,33,33,33,33,33,33,33,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> blocks','program',1,'p_program','Cparser.py',43),
  ('blocks -> blocks block','blocks',2,'p_blocks','Cparser.py',50),
  ('blocks -> <empty>','blocks',0,'p_blocks','Cparser.py',51),
  ('block -> declaration','block',1,'p_block','Cparser.py',60),
  ('block -> fundef','block',1,'p_block','Cparser.py',61),
  ('block -> instruction','block',1,'p_block','Cparser.py',62),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','Cparser.py',67),
  ('declarations -> <empty>','declarations',0,'p_declarations','Cparser.py',68),
  ('declaration -> TYPE inits ;','declaration',3,'p_declaration','Cparser.py',88),
  ('declaration -> error ;','declaration',2,'p_declaration','Cparser.py',89),
  ('inits -> inits , init','inits',3,'p_inits','Cparser.py',100),
  ('inits -> init','inits',1,'p_inits','Cparser.py',101),
  ('init -> ID = expression','init',3,'p_init','Cparser.py',112),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Cparser.py',133),
  ('instructions -> instruction','instructions',1,'p_instructions','Cparser.py',134),
  ('instruction -> print_instr','instruction',1,'p_instruction','Cparser.py',145),
  ('instruction -> labeled_instr','instruction',1,'p_instruction','Cparser.py',146),
  ('instruction -> assignment','instruction',1,'p_instruction','Cparser.py',147),
  ('instruction -> choice_instr','instruction',1,'p_instruction','Cparser.py',148),
  ('instruction -> while_instr','instruction',1,'p_instruction','Cparser.py',149),
  ('instruction -> repeat_instr','instruction',1,'p_instruction','Cparser.py',150),
  ('instruction -> return_instr','instruction',1,'p_instruction','Cparser.py',151),
  ('instruction -> break_instr','instruction',1,'p_instruction','Cparser.py',152),
  ('instruction -> continue_instr','instruction',1,'p_instruction','Cparser.py',153),
  ('instruction -> compound_instr','instruction',1,'p_instruction','Cparser.py',154),
  ('instruction -> expression ;','instruction',2,'p_instruction','Cparser.py',155),
  ('print_instr -> PRINT expr_list ;','print_instr',3,'p_print_instr','Cparser.py',168),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr','Cparser.py',169),
  ('labeled_instr -> ID : instruction','labeled_instr',3,'p_labeled_instr','Cparser.py',176),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Cparser.py',182),
  ('choice_instr -> IF ( condition ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',187),
  ('choice_instr -> IF ( condition ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',188),
  ('choice_instr -> IF ( error ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',189),
  ('choice_instr -> IF ( error ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',190),
  ('while_instr -> WHILE ( condition ) instruction','while_instr',5,'p_while_instr','Cparser.py',202),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_while_instr','Cparser.py',203),
  ('repeat_instr -> REPEAT instructions UNTIL condition ;','repeat_instr',5,'p_repeat_instr','Cparser.py',209),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','Cparser.py',214),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_instr','Cparser.py',219),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_instr','Cparser.py',223),
  ('compound_instr -> { declarations instructions }','compound_instr',4,'p_compound_instr','Cparser.py',227),
  ('condition -> expression','condition',1,'p_condition','Cparser.py',232),
  ('const -> INTEGER','const',1,'p_const','Cparser.py',236),
  ('const -> FLOAT','const',1,'p_const','Cparser.py',237),
  ('const -> STRING','const',1,'p_const','Cparser.py',238),
  ('expression -> ID','expression',1,'p_expression_id','Cparser.py',250),
  ('expression -> const','expression',1,'p_expression','Cparser.py',254),
  ('expression -> expression + expression','expression',3,'p_expression','Cparser.py',255),
  ('expression -> expression - expression','expression',3,'p_expression','Cparser.py',256),
  ('expression -> expression * expression','expression',3,'p_expression','Cparser.py',257),
  ('expression -> expression / expression','expression',3,'p_expression','Cparser.py',258),
  ('expression -> expression % expression','expression',3,'p_expression','Cparser.py',259),
  ('expression -> expression | expression','expression',3,'p_expression','Cparser.py',260),
  ('expression -> expression & expression','expression',3,'p_expression','Cparser.py',261),
  ('expression -> expression ^ expression','expression',3,'p_expression','Cparser.py',262),
  ('expression -> expression AND expression','expression',3,'p_expression','Cparser.py',263),
  ('expression -> expression OR expression','expression',3,'p_expression','Cparser.py',264),
  ('expression -> expression SHL expression','expression',3,'p_expression','Cparser.py',265),
  ('expression -> expression SHR expression','expression',3,'p_expression','Cparser.py',266),
  ('expression -> expression EQ expression','expression',3,'p_expression','Cparser.py',267),
  ('expression -> expression NEQ expression','expression',3,'p_expression','Cparser.py',268),
  ('expression -> expression > expression','expression',3,'p_expression','Cparser.py',269),
  ('expression -> expression < expression','expression',3,'p_expression','Cparser.py',270),
  ('expression -> expression LE expression','expression',3,'p_expression','Cparser.py',271),
  ('expression -> expression GE expression','expression',3,'p_expression','Cparser.py',272),
  ('expression -> ( expression )','expression',3,'p_expression','Cparser.py',273),
  ('expression -> ( error )','expression',3,'p_expression','Cparser.py',274),
  ('expression -> ID ( expr_list_or_empty )','expression',4,'p_expression','Cparser.py',275),
  ('expression -> ID ( error )','expression',4,'p_expression','Cparser.py',276),
  ('expr_list_or_empty -> expr_list','expr_list_or_empty',1,'p_expr_list_or_empty','Cparser.py',314),
  ('expr_list_or_empty -> <empty>','expr_list_or_empty',0,'p_expr_list_or_empty','Cparser.py',315),
  ('expr_list -> expr_list , expression','expr_list',3,'p_expr_list','Cparser.py',326),
  ('expr_list -> expression','expr_list',1,'p_expr_list','Cparser.py',327),
  ('fundef -> TYPE ID ( args_list_or_empty ) compound_instr','fundef',6,'p_fundef','Cparser.py',344),
  ('args_list_or_empty -> args_list','args_list_or_empty',1,'p_args_list_or_empty','Cparser.py',353),
  ('args_list_or_empty -> <empty>','args_list_or_empty',0,'p_args_list_or_empty','Cparser.py',354),
  ('args_list -> args_list , arg','args_list',3,'p_args_list','Cparser.py',368),
  ('args_list -> arg','args_list',1,'p_args_list','Cparser.py',369),
  ('arg -> TYPE ID','arg',2,'p_arg','Cparser.py',386),
]
